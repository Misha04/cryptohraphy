def gf_multiply(byte1, byte2):
    """Множення двох байтів у GF(2^8) з використанням m(x) = x^8 + x^4 + x^3 + x + 1."""
    result = 0  # Початковий результат
    modulus = 0x1B  # Поліном m(x) = x^8 + x^4 + x^3 + x + 1
    for _ in range(8):  # 8 біт у байті
        if byte2 & 1:  # Якщо молодший біт множника встановлено
            result ^= byte1  # Додаємо (XOR) множене до результату
        carry = byte1 & 0x80  # Перевіряємо, чи встановлено старший (8-й) біт
        byte1 <<= 1  # Зсув множеного вліво
        if carry:  # Якщо старший біт був встановлений
            byte1 ^= modulus  # Виконуємо редукцію за модулем
        byte2 >>= 1  # Зсув множника вправо
    return result & 0xFF  # Повертаємо тільки молодші 8 біт результату

# Приклади тестування
print(f"57 * 83 = {hex(gf_multiply(0x57, 0x83))}")  # Очікувано: 0xC1
